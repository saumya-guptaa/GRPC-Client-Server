# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import log_pb2 as log__pb2


class log_sharingStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get_file = channel.unary_stream(
                '/log.log_sharing/Get_file',
                request_serializer=log__pb2.filename.SerializeToString,
                response_deserializer=log__pb2.content.FromString,
                )


class log_sharingServicer(object):
    """Missing associated documentation comment in .proto file"""

    def Get_file(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_log_sharingServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get_file': grpc.unary_stream_rpc_method_handler(
                    servicer.Get_file,
                    request_deserializer=log__pb2.filename.FromString,
                    response_serializer=log__pb2.content.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'log.log_sharing', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class log_sharing(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def Get_file(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/log.log_sharing/Get_file',
            log__pb2.filename.SerializeToString,
            log__pb2.content.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
